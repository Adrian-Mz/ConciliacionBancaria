generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Rol {
  id       Int       @id @default(autoincrement())
  nombre   String    @unique
  usuarios Usuario[]
}

model Usuario {
  id             Int               @id @default(autoincrement())
  nombre         String
  correo         String            @unique
  contraseÃ±a     String
  rolId          Int
  rol            Rol               @relation(fields: [rolId], references: [id])
  
  // Relaciones con Conciliaciones
  conciliacionesCreadas  Conciliacion[] @relation(name: "UsuarioCreador")  
  auditoriasRealizadas   Conciliacion[] @relation(name: "UsuarioAuditor")  
  decisionesTomadas      Conciliacion[] @relation(name: "UsuarioDirector") 

  cuentas        CuentaBancaria[]  
  reportes       ReporteBancario[] 
  auditoria      Auditoria[]       
  estadosManuales EstadoCuentaManual[]  
  notificaciones Notificacion[]  

  createdAt      DateTime          @default(now())
}

model EstadoCuentaManual {
  id          Int               @id @default(autoincrement())
  fecha       DateTime
  cuentaId    Int
  cuenta      CuentaBancaria    @relation(fields: [cuentaId], references: [id])
  usuarioId   Int
  usuario     Usuario           @relation(fields: [usuarioId], references: [id])
  verificado  Boolean           @default(false) 
  createdAt   DateTime          @default(now())

  // ðŸ”¹ RelaciÃ³n inversa con DetalleConciliacion
  detalleConciliaciones DetalleConciliacion[] @relation("EstadoCuentaManual_Conciliaciones")

  // ðŸ”¹ RelaciÃ³n inversa con EstadoCuentaManualDetalle
  detalles EstadoCuentaManualDetalle[] @relation("EstadoCuentaManualDetalles")
}

model EstadoCuentaManualDetalle {
  id                   Int               @id @default(autoincrement())
  estadoCuentaManualId Int
  estadoCuentaManual   EstadoCuentaManual @relation(name: "EstadoCuentaManualDetalles", fields: [estadoCuentaManualId], references: [id])
  descripcion          String
  valor                Decimal
  saldo                Decimal
  referencia           String
  createdAt            DateTime         @default(now())
}

model CuentaBancaria {
  id              Int                   @id @default(autoincrement())
  nombre          String
  numero          String                @unique
  banco           String
  usuarioId       Int
  usuario         Usuario               @relation(fields: [usuarioId], references: [id])
  estadosManuales EstadoCuentaManual[]  
  detallesReporte DetalleReporte[]      
  createdAt       DateTime              @default(now())
}

model ReporteBancario {
  id              Int              @id @default(autoincrement())
  fechaSubida     DateTime         @default(now())
  usuarioId       Int
  usuario         Usuario          @relation(fields: [usuarioId], references: [id])
  nombreArchivo   String
  estadoId        Int
  estado          Estado           @relation(fields: [estadoId], references: [id])
  detallesReporte DetalleReporte[] 
  createdAt       DateTime         @default(now())
}

model DetalleReporte {
  id                    Int                   @id @default(autoincrement())
  reporteId             Int
  reporte               ReporteBancario       @relation(fields: [reporteId], references: [id])
  fecha                 DateTime
  cuentaId              Int
  cuenta                CuentaBancaria        @relation(fields: [cuentaId], references: [id])
  descripcion           String
  valor                Decimal
  saldo                Decimal
  referencia           String
  detalleConciliaciones DetalleConciliacion[] 
  createdAt             DateTime              @default(now())
}

model Conciliacion {
  id                   Int                   @id @default(autoincrement())
  usuarioId            Int
  usuario              Usuario               @relation(name: "UsuarioCreador", fields: [usuarioId], references: [id])
  fecha                DateTime              @default(now())
  estadoId             Int
  estado               Estado                @relation(fields: [estadoId], references: [id])
  detallesConciliacion DetalleConciliacion[]

  auditorId            Int?                  
  auditor              Usuario?              @relation(name: "UsuarioAuditor", fields: [auditorId], references: [id])

  directorId           Int?                  
  director             Usuario?              @relation(name: "UsuarioDirector", fields: [directorId], references: [id])

  observaciones        String?
  createdAt            DateTime              @default(now())
}

model DetalleConciliacion {
  id                Int                 @id @default(autoincrement())
  conciliacionId    Int
  conciliacion      Conciliacion        @relation(fields: [conciliacionId], references: [id])
  
  estadoManualId    Int
  estadoManual      EstadoCuentaManual  @relation(name: "EstadoCuentaManual_Conciliaciones", fields: [estadoManualId], references: [id])
  
  detalleReporteId  Int
  detalleReporte    DetalleReporte      @relation(fields: [detalleReporteId], references: [id])
  
  estadoId          Int
  estado            Estado              @relation(fields: [estadoId], references: [id])
  createdAt         DateTime            @default(now())
}

model Estado {
  id                    Int                   @id @default(autoincrement())
  nombre                String                @unique
  reportes              ReporteBancario[]
  conciliaciones        Conciliacion[]
  detalleConciliaciones DetalleConciliacion[]
}

model Auditoria {
  id        Int      @id @default(autoincrement())
  usuarioId Int
  usuario   Usuario  @relation(fields: [usuarioId], references: [id])
  fecha     DateTime @default(now())
  accion    String
}

model Notificacion {
  id         Int      @id @default(autoincrement())
  usuarioId  Int
  usuario    Usuario  @relation(fields: [usuarioId], references: [id])
  mensaje    String
  leida      Boolean  @default(false) 
  createdAt  DateTime @default(now())
}
